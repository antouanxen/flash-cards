generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model card {
  id                       String      @id(map: "PK_9451069b6f1199730791a7f4ae4") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  front_text               String      @db.VarChar(1500)
  back_text                String      @db.VarChar(2500)
  color                    String      @db.Char(7)
  created_at               DateTime    @default(now()) @db.Timestamp(6)
  updated_at               DateTime    @default(now()) @db.Timestamp(6)
  deleted_at               DateTime?   @db.Timestamp(6)
  collectionId             String?     @db.Uuid
  userId                   String?     @db.Uuid
  image_name               String?     @db.VarChar(2500)
  user                     user?       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_77d7cc9d95dccd574d71ba221b0")
  collection               collection? @relation(fields: [collectionId], references: [id], onUpdate: SetNull, map: "FK_dfe9f279d9089708578c122def1")
  image_image_cardIdTocard image?      @relation("image_cardIdTocard")
}

model collection {
  id         String    @id(map: "PK_ad3f485bbc99d875491f44d7c85") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String?   @db.VarChar(100)
  userId     String?   @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  cards      card[]
  user       user?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ca25eb01f75a85272300f336029")
}

model user {
  id          String       @id(map: "PK_cace4a159ff9f2512dd42373760") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username    String       @db.VarChar(50)
  email       String       @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar(50)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  userid      String       @unique(map: "UQ_755ac9fbd440bc9b97fe9532108") @db.VarChar
  cards       card[]
  collections collection[]
}

model image {
  id                      String   @id(map: "PK_d6db1ab4ee9ad9dbe86c64e4cc3") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  image_name              String?  @unique(map: "UQ_0c97514c8d98baa69bc2a37aecf") @db.VarChar
  created_at              DateTime @default(now()) @db.Timestamp(6)
  updated_at              DateTime @default(now()) @db.Timestamp(6)
  cardId                  String?  @unique(map: "UQ_19739420781e2a03f244ec55934") @db.Uuid
  image_data              Bytes?   @db.Bytea
  card_image_cardIdTocard card?    @relation("image_cardIdTocard", fields: [cardId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_19739420781e2a03f244ec55934")
}
